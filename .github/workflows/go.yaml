name: go_test
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  test:
    strategy:
      matrix:
        go-version: [ 1.15.x ]
        platform: [ ubuntu-20.04, ubuntu-18.04 ]
        protoc-version: [ 3.14.0 ]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go-version }}
    - name: Install protoc
      run: |
        PROTOC_ZIP=protoc-${{ matrix.protoc-version }}-linux-x86_64.zip
        curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v${{ matrix.protoc-version }}/$PROTOC_ZIP
        sudo unzip -o $PROTOC_ZIP -d /usr/local bin/protoc
        sudo unzip -o $PROTOC_ZIP -d /usr/local 'include/*'
        rm -f $PROTOC_ZIP
    - name: Checkout code
      uses: actions/checkout@v2
    - name: using cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: go test & vet
      run:  make sudo-test
    - name: Check go.mod and go.sum is up-to-date
      run: |
        go mod tidy
        if [[ $(git diff --name-only | grep -E "go\.(sum|mod)" || echo -n "") != "" ]]; then \
          echo "go.sum or go.mod is not updated."; \
          exit 1; \
        fi
    - name: Check .pb.go is up-to-date
      run: |
        make pb
        if [[ $(git diff --name-only) != "" ]]; then \
          echo "*.pb.go are not updated."; \
          exit 1; \
        fi
